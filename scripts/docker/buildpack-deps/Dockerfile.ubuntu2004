# vim:syntax=dockerfile
#------------------------------------------------------------------------------
# Dockerfile for building and testing Solidity Compiler on CI
# Target: Ubuntu 19.04 (Disco Dingo)
# URL: https://hub.docker.com/r/ethereum/solidity-buildpack-deps
#
# This file is part of solidity.
#
# solidity is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# solidity is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with solidity.  If not, see <http://www.gnu.org/licenses/>
#
# (c) 2016-2019 solidity contributors.
#------------------------------------------------------------------------------
FROM buildpack-deps:focal AS base
LABEL version="4"

ARG DEBIAN_FRONTEND=noninteractive

RUN set -ex; \
        dist=$(grep DISTRIB_CODENAME /etc/lsb-release | cut -d= -f2); \
        echo "deb http://ppa.launchpad.net/ethereum/cpp-build-deps/ubuntu $dist main" >> /etc/apt/sources.list ; \
        apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 1c52189c923f6ca9 ; \
	apt-get update; \
	apt-get install -qqy --no-install-recommends \
		build-essential \
		software-properties-common \
		cmake ninja-build \
		libcvc4-5 libcvc4-dev libz3-dev \
		; \
	apt-get install -qy python3-pip python3-sphinx; \
	pip3 install codecov; \
	rm -rf /var/lib/apt/lists/*

FROM base AS libraries

# EVMONE
RUN set -ex; \
	cd /usr/src; \
	git clone --branch="v0.4.0" --recurse-submodules https://github.com/ethereum/evmone.git; \
	cd evmone; \
	mkdir build; \
	cd build; \
	cmake -G Ninja -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX="/usr" ..; \
	ninja; \
	ninja install/strip; \
	rm -rf /usr/src/evmone

# HERA
RUN set -ex; \
	cd /usr/src; \
	git clone --branch="v0.3.2" --depth 1 --recurse-submodules https://github.com/ewasm/hera.git; \
	cd hera; \
	mkdir build; \
	cd build; \
	cmake -G Ninja -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX="/usr" ..; \
	ninja; \
	ninja install/strip; \
	rm -rf /usr/src/hera

# Z3
RUN set -ex; \
    git clone --depth 1 -b z3-4.8.9 https://github.com/Z3Prover/z3.git \
    /usr/src/z3; \
    cd /usr/src/z3; \
    mkdir build; \
    cd build; \
    LDFLAGS=$CXXFLAGS cmake -DZ3_BUILD_LIBZ3_SHARED=OFF -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=Release ..; \
    make libz3 -j; \
    make install; \
    rm -rf /usr/src/z3

# Boost
ARG BOOST_VER=1.76.0
ARG BOOST_VERSION=1_76_0

# Download and unpack Boost
RUN wget https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VER}/source/boost_${BOOST_VERSION}.tar.bz2 && \
    tar -xjf boost_${BOOST_VERSION}.tar.bz2 && \
    rm boost_${BOOST_VERSION}.tar.bz2

# Build and install Boost
RUN cd boost_${BOOST_VERSION} && \
    ./bootstrap.sh && \
    ./b2 && \
	./b2 install

# Set the environment variables
ENV LD_LIBRARY_PATH=/usr/local/lib:/usr/lib/x86_64-linux-gnu:${LD_LIBRARY_PATH}
ENV BOOST_LIBRARYDIR=/usr/local/lib
ENV BOOST_INCLUDEDIR=/usr/local/include

FROM base
COPY --from=libraries /usr/lib /usr/lib
COPY --from=libraries /usr/bin /usr/bin
COPY --from=libraries /usr/include /usr/include
COPY --from=libraries /usr/local/lib /usr/local/lib
COPY --from=libraries /usr/local/include /usr/local/include
